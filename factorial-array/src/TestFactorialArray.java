/*
File: TestFactorialArray.java
Zachary Muranaka
Tests the FactorialArray class against 10 example outputs
*/

public class TestFactorialArray
{
    /*
     * The terminal being used will determine whether or not these colors display correctly
     * In the integrated Visual Studio Code terminal, Windows Terminal, and WSL Ubuntu terminal, they display correctly
     * However, they do not display correctly in Command Prompt or PowerShell
     */
    private static final String GREEN = "\033[0;32m";
    private static final String RED = "\033[0;31m";
    private static final String RESET = "\033[0m";

    public static void main(String[] args)
    {
        // Test 1: The factorial of 0 equals 1
        assertion(new FactorialArray(0), "1", "Test 1: ");

        // Test 2: The factorial of 1 equals 1
        assertion(new FactorialArray(1), "1", "Test 2: ");

        // Test 3: The factorial of 5 equals 120
        assertion(new FactorialArray(5), "120", "Test 3: ");

        // Test 4: The factorial of 13 equals 6227020800
        assertion(new FactorialArray(13), "6227020800", "Test 4: ");

        // Test 5: The factorial of 20 equals 2432902008176640000
        assertion(new FactorialArray(20), "2432902008176640000", "Test 5: ");

        // Test 6: The factorial of 41 equals 33452526613163807108170062053440751665152000000000
        assertion(new FactorialArray(41), "33452526613163807108170062053440751665152000000000", "Test 6: ");

        // Test 7: The factorial of 113 equals 22311927486598136465966070212187151182564399087952213171022161345724023063584214692821047352118139068425569179220877461124773845924561575264739138192463311667200000000000000000000000000
        assertion(new FactorialArray(113), "22311927486598136465966070212187151182564399087952213171022161345724023063584214692821047352118139068425569179220877461124773845924561575264739138192463311667200000000000000000000000000", "Test 7: ");

        // Test 8: The factorial of 319 equals
        assertion(new FactorialArray(319), "66128229600601640092366157533675933308733247213675408364243071923681532283888975524568088659634909189758097630647213696435299602004214516144972687626236199715582821169837050482233226921429353398632285530928015363480553994665516258689457202624141419759635378893549751079518001466611614652525566831512299180329013604362092252692944237898426203408573757215780690421616046110818353165455327934234789764572112126365612200292670966717352053017532957938662651315708152893151543681762562458104508015329571080216913518822786913342526744787992999966070467653954247746400265215377049057691382579200000000000000000000000000000000000000000000000000000000000000000000000000000", "Test 8: ");

        // Test 9: The factorial of 557 equals
        assertion(new FactorialArray(557), "204832940050850587223408053193051589652844085530009667333766900459316136215856784414534511827643796043865011253703816416923936062698415098330413583163819174264493950126180500506068646830718119574870153617084707268963980314521625219134968782648026503598527152902425761001509526646633045932360822213785955139124355719659241534372357312949647519619216467126756322061240345845710207792427909805713859851952933534135260469442188893511119356548776156766873542695008516390006620553404278822097075754601849691660957117235037949887073775722862509923018097418249577304664219225322620822246860915832289941972892828919405259834713777606789416148926278972177397244804906547952658283173715340688496905401727146655060724335835568329774455833569643781946218662580120162852376266897846915733334713350722242975582767403380657580560464093448861730455924032218452514619624801831591647661405514979473617420205665929643890214831811871019882513884353227357238949281618017787231497774063620856287858207618760910966024119496714471921482646307092250136666059743706522352403483979855212933869680120521066392879481726922596437788279699518817639509034109066834626129186722787046195200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "Test 9: ");

        // Test 10: The factorial of 793 equals
        assertion(new FactorialArray(793), "3774727105930735620830690605481113356325637193695864880295665280195220746558406549936383831685279000935664479804886804466202109124148771035621951592530238570204290247190744212394353568002983413632799758300532090311078165065927946057886556144201907948465755533706621221614817172566100844658393550326255189371189233575613555917734929966143144688028543467360749369404997772729219327041588893687307283536210306531335247408002716307901146872923202003980064672368710161208721380435719060583598781369747355862006334039846887745542515873963779803119888285589850484308622656618407942449125454006173238828310636983080434594935880416041354196718887377462013554055338943981378284124790413665586748246216764238947303702997748441916619569956375699709142867818046946232213112844903203841209051418450484537486242927564269948566691049667248069657154143429331097318483028060936536990808155563415635779990299791079249650056008837613244968978252528824298362392063424498511847146805935237618132861136595711572287986586225627646964597745853858186369207131215056573866264280214915978907521135438318214990506151368155440377296562756298253270392845692352070590365771424892266699588726333087036710741775583687141292686554090804459633733387146516224559259975977078749850169576714032537643368536141740914659271197118561209293808497917175018181186729398250015321957051092637810659014635959342909615701816140716984293264617802282446508721125979316354412600787944120780562190206728829347384630804208303701230026719989604905419591064666063665803106543805186734841071595886575024395032313981785557335669329402740952054569127536308929502250201961243630455674671477492572699400277231535105803258392781088149555418827264197397666668196013582814962224131727540448727844198895078582507490266117570560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "Test 10: ");
        
        System.out.print(RESET); // Reset the colors to normal
    }

    public static void assertion(FactorialArray beingTested, String testedAgainst, String message)
    {
        boolean testPassed = beingTested.getProductAsString().equals(testedAgainst);

        System.out.print(testPassed ? GREEN : RED);
        System.out.println(message + (testPassed ? "Passed" : "Failed"));

        // Show what was expected and what was actually received if the test did not pass
        if (!testPassed)
        {
            System.out.println("Expected: " + testedAgainst);
            System.out.println("Received: " + beingTested.getProductAsString());
        }
    }
}
